<?xml version="1.0" encoding="utf-8"?>
<testSuite name="The TestSuite" xmlns="http://NBi/TestSuite">
  <test name="Result-set has csv file" uid="0000">
    <system-under-test>
      <resultSet file="myFile.csv"/>
    </system-under-test>
    <assert>
      <unique-rows/>
    </assert>
  </test>
  <test name="Result-set has embedded" uid="0001">
    <system-under-test>
      <result-set>
        <row>
          <cell>A</cell>
          <cell>120</cell>
        </row>
        <row>
          <cell>B</cell>
          <cell>120</cell>
        </row>
      </result-set>
    </system-under-test>
    <assert>
      <unique-rows/>
    </assert>
  </test>
  <test name="Result-set has query in an external file" uid="0002">
    <system-under-test>
      <resultSet>
        <query file="myfile.sql"/>
      </resultSet>
    </system-under-test>
    <assert>
      <unique-rows/>
    </assert>
  </test>
  <test name="Result-set has embedded query" uid="0003">
    <system-under-test>
      <resultSet>
        <query>select * from myTable;</query>
      </resultSet>
    </system-under-test>
    <assert>
      <unique-rows/>
    </assert>
  </test>
  <test name="'Query from assembly equal to CSV" uid="0004">
    <system-under-test>
      <resultSet>
        <query>
          <assembly path="NBi.Testing.dll" class="NBi.Testing.Acceptance.Resources.AssemblyClass" method="GetTextSelectSql">
            <method-parameter name="prefix">CY</method-parameter>
          </assembly>
        </query>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="'Query from report equal to report" uid="0005">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a filter" uid="0006">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <filter>
            <predicate>
              <starts-with ignore-case="true">COMP</starts-with>
            </predicate>
          </filter>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a converter" uid="0007">
    <system-under-test>
      <result-set>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <convert column="#0">
            <text-to-date culture="fr-fr"/>
          </convert>
        </alteration>
      </result-set>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a transformation" uid="0008">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <transform language="c-sharp" original-type="text" column-index="1">
            value.EndsWith(".") ? value : value + "."
          </transform>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a renaming" uid="0009">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <rename identifier="#3" new-name="myNewName"/>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Result-set has csv file" uid="0010">
    <system-under-test>
      <resultSet>
        <file>
          <path>myFile.csv</path>
          <parser name="tabular"/>
        </file>
      </resultSet>
    </system-under-test>
    <assert>
      <unique-rows/>
    </assert>
  </test>
  <test name="Result-set has csv file" uid="0011">
    <system-under-test>
      <resultSet file="myFile.csv!tabular"/>
    </system-under-test>
    <assert>
      <unique-rows/>
    </assert>
  </test>
  <test name="Alteration has an extend" uid="0012">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <extend identifier="[myNewColumn]">
            <script language="ncalc">[A] * [B] + Max(5, [C])</script>
          </extend>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a summarization" uid="0013">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <summarize>
            <sum type="numeric" column="#2"/>
          </summarize>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a unstack" uid="0014">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <unstack>
            <header>
              <column identifier="myHeaderColumn"/>
            </header>
            <group-by>
              <column identifier="myKeyColumn"/>
            </group-by>
          </unstack>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a project" uid="0015">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <project>
            <column identifier="#0" />
            <column identifier="[Value]" />
          </project>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a project-away" uid="0016">
    <system-under-test>
      <resultSet>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <project-away>
            <column identifier="#0" />
            <column identifier="[TimeStamp]" />
          </project-away>
        </alteration>
      </resultSet>
    </system-under-test>
    <assert>
      <equalTo>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equalTo>
    </assert>
  </test>
  <test name="Alteration has a project-away" uid="0017">
    <system-under-test>
      <result-set>
        <query>
          <report path="/path/" name="MyReport" dataset="MyDataSet"/>
        </query>
        <alteration>
          <lookup-replace>
            <join>
              <mapping candidate="#1" reference="#0"/>
            </join>
            <result-set>
              <row>
                <cell>A</cell>
                <cell>alpha</cell>
              </row>
              <row>
                <cell>B</cell>
                <cell>beta</cell>
              </row>
            </result-set>
            <replacement identifier="#1"/>
          </lookup-replace>
        </alteration>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equal-to>
    </assert>
  </test>
  <test name="Result-set is an empty result-set" uid="0018">
    <system-under-test>
      <result-set>
        <empty column-count="4">
          <column identifier="myFirstColumn"/>
          <column identifier="mySecondColumn"/>
        </empty>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <result-set file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equal-to>
    </assert>
  </test>
  <test name="Result-set has an if-unavailable" uid="0019">
    <system-under-test>
      <result-set>
        <xml-source>
          <file>
            <path>xmlSource.xml</path>
          </file>
          <xpath>
            <from>//element</from>
            <select>/name</select>
            <select>/value</select>
          </xpath>
        </xml-source>
        <if-unavailable>
          <result-set>
            <empty column-count="2"/>
          </result-set>
        </if-unavailable>
      </result-set>
    </system-under-test>
    <assert>
      <equal-to>
        <result-set file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </equal-to>
    </assert>
  </test>
</testSuite>