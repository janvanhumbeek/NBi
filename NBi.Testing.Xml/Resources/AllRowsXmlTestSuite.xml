<?xml version="1.0" encoding="utf-8" ?>
<testSuite name="All-rows TestSuite" xmlns="http://NBi/TestSuite">
  <settings>
    <default apply-to="system-under-test">
      <connectionString>Data Source=mhknbn2kdz.database.windows.net;Initial Catalog=AdventureWorks2012;User Id=sqlfamily;password=sqlf@m1ly</connectionString>
    </default>
  </settings>
  <test name="With Predicate and with formula" uid="0000">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select row_count as DeptId, [Name], [GroupName] from [HumanResources].[Department] order by Name
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">DeptId</variable>
        <expression name="LogDepId">
          Log10(DepId)
        </expression>
        <predicate name="ModDepId">
          <more-than or-equal="true">10</more-than>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate Null or empty" uid="0001">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select null as Name
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <alias column-index="0">Name</alias>
        <alias column-index="1">Name2</alias>
        <predicate name="Name" type="text">
          <empty or-null="true"/>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate StartsWith" uid="0002">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select [Name] from [HumanResources].[Department] where Name like 'E%' order by Name
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Name</variable>
        <predicate name="Name" type="text">
          <starts-with>E</starts-with>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate EndsWith" uid="0003">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select [Name] from [HumanResources].[Department] where Name like '%e' order by Name
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Name</variable>
        <predicate name="Name" type="text">
          <ends-with ignore-case="false">e</ends-with>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate contains" uid="0004">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select [Name] from [HumanResources].[Department] where Name like '%en%' order by Name
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Name</variable>
        <predicate name="Name" type="text">
          <contains ignore-case="true">en</contains>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate is match regex" uid="0005">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select [Name] from [HumanResources].[Department]
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Name</variable>
        <predicate name="Name" type="text">
          <matches-regex>^[A-z]+$</matches-regex>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate is lower case" uid="0006">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select lower([Name]) from [HumanResources].[Department]
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Name</variable>
        <predicate name="Name" type="text">
          <lower-case/>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate is lower case" uid="0007">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select upper([Name]) from [HumanResources].[Department]
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Name</variable>
        <predicate name="Name" type="text">
          <upper-case/>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate is within-range" uid="0008">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select 10 union select 20 union select 30
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Value</variable>
        <predicate name="Value" type="numeric">
          <within-range>[10;30]</within-range>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate is within-list" uid="0009">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select 10 union select 20 union select 30
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Value</variable>
        <predicate name="Value" type="numeric">
          <within-list>
            <item>10</item>
            <item>20</item>
            <item>30</item>
          </within-list>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With Predicate is within-list" uid="0010">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select 10 union select 20 union select 30
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">Value</variable>
        <predicate name="Value" type="numeric">
          <any-of>
            <item>10</item>
            <item>20</item>
            <item>30</item>
          </any-of>
        </predicate>
      </all-rows>
    </assert>
  </test>
  <test name="With multiple expressions" uid="0011">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select 10 union select 20 union select 30
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <expression name="div">[#0] / 2</expression>
        <expression name="multi">[#0] * 2</expression>
      </all-rows>
    </assert>
  </test>
  <test name="With expression written with a native script" uid="0030">
    <system-under-test>
      <execution>
        <query name="Select first departments">
          select row_count as DeptId, [Name], [GroupName] from [HumanResources].[Department] order by Name
        </query>
      </execution>
    </system-under-test>
    <assert>
      <all-rows>
        <variable column-index="0">DeptId</variable>
        <expression name="IntegerDepId">
          <script language="native">
            DeptId | numeric-to-integer
          </script>
        </expression>
        <predicate name="IntegerDepId">
          <more-than or-equal="true">10</more-than>
        </predicate>
      </all-rows>
    </assert>
  </test>
</testSuite>
